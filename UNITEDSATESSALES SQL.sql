--1--CHECKING FOR NULL VALUES

--SELECT  COUNT(*) FROM US_Sales_database_2019_2023 WHERE State_ID IS NULL OR Buyer_ID IS NULL OR Product_ID IS NULL;

--SELECT  COUNT(*) FROM Buyers_database WHERE Buyer_ID IS NULL;

--SELECT COUNT(*) FROM Products_database WHERE Product_ID IS NULL;

--SELECT COUNT(*) FROM Product_Category_database WHERE Product_ID IS NULL OR Category_ID IS NULL;

--SELECT COUNT(*) FROM States_database WHERE State_ID IS NULL;

--SELECT COUNT(*) FROM Categories_database WHERE Category_ID IS NULL;

--2--CHECKING FOR DUPLICATES
--SELECT Buyer_ID, COUNT(*) FROM Buyers_database GROUP BY Buyer_ID HAVING COUNT(*) > 1

--SELECT Product_ID, COUNT(*) FROM Products_database GROUP BY Product_ID HAVING COUNT(*) > 1

--DUPLICATES FOR THE SALES TABLE
--    SELECT 
--    Purchase_Date, 
--    State_ID, 
--    Buyer_ID, 
--    Product_ID, 
--    Category_ID,
--    Quantity_Purchased_lb, 
--    Purchase_Price,
--    Quantity_Sold_lb,
--    Sale_Price,
--    COUNT(*) AS Duplicate_Count
--FROM US_Sales_database_2019_2023
--GROUP BY 
--    Purchase_Date, 
--    State_ID, 
--    Buyer_ID, 
--    Product_ID, 
--    Category_ID,
--    Quantity_Purchased_lb, 
--    Purchase_Price,
--    Quantity_Sold_lb,
--    Sale_Price
--HAVING COUNT(*) > 1
--ORDER BY Duplicate_Count DESC

SELECT *  FROM US_Sales_database_2019_2023

--3--REVENUE EACH IN THE US SALES TABLE

--SELECT *, 
--(Sale_Price * Quantity_Sold_lb) AS Revenue
--FROM US_Sales_database_2019_2023

--PERMANENTLY ADDED REVENUE COLUMN TO THE TABLE
--ALTER TABLE US_Sales_database_2019_2023
--ADD Revenue AS (Sale_Price * Quantity_Sold_lb);

--4--YEARLY REVENUE GENERATED

--SELECT 
--    YEAR(Purchase_Date) AS Purchase_Year,
--    SUM(Revenue) AS Total_Revenue
--FROM 
--    US_Sales_database_2019_2023
--GROUP BY 
--    YEAR(Purchase_Date) 
--    ORDER BY Purchase_Year

--ADDING PROFIT TO THE TABLE
--SELECT *, 
--((Sale_Price- Purchase_Price) * Quantity_Sold_lb) AS Profit
--FROM US_Sales_database_2019_2023

--ALTER TABLE US_Sales_database_2019_2023
--ADD Profit AS ((Sale_Price- Purchase_Price) * Quantity_Sold_lb


--5-- CREATED A VIEW BY JOINING ALL TABLES INORDER TO CREATE A DASHBOARD ON MS EXCEL
--CREATE VIEW vw_Full_US_Sales_View AS
--SELECT
--    YEAR(US.Purchase_Date) AS Purchase_Year,
--    DATENAME(MONTH, US.Purchase_Date) AS Month_Name,
--    US.Purchase_Date,
--    Sd.State,
--    Bd.Buyer_ID,
--    Bd.Buyer,
--    Pd.Product_ID,
--    Pd.Product,
--    Cd.Category_ID,
--    Cd.Category,
--    US.Quantity_Sold_lb,
--    US.Quantity_Purchased_lb,
--    US.Revenue,
--    US.Profit

--FROM 
--    US_Sales_database_2019_2023 US

--LEFT JOIN 
--    Products_database Pd
--    ON US.Product_ID = Pd.Product_ID

--LEFT JOIN 
--    Product_Category_database PC
--    ON Pd.Product_ID = PC.Product_ID

--LEFT JOIN 
--    Categories_database Cd
--    ON PC.Category_ID = Cd.Category_ID

--LEFT JOIN 
--    States_database Sd
--    ON US.State_ID = Sd.State_ID

--LEFT JOIN 
--    Buyers_database Bd
--    ON US.Buyer_ID = Bd.Buyer_ID;

--SELECT *
--FROM vw_Full_US_Sales_View

--BUSINESS QUESTIONS

--6--PROFITABLE CATEGORIES

--SELECT
--    Cd.Category,
--    SUM(US.Profit) AS Total_Profit
--FROM 
--    US_Sales_database_2019_2023 US
--JOIN 
--    Categories_database Cd
--    ON US.Category_ID = Cd.Category_ID
--GROUP BY
--    Cd.Category
--ORDER BY
--    Total_Profit DESC;


--7--TOP 10 PROFITABLE PRODUCTS

--WITH Product_Sales AS (
--    SELECT 
--        Pd.Product,                
--        SUM(US.Profit) AS Total_Profit
--    FROM 
--        US_Sales_database_2019_2023 US
--    JOIN 
--        Products_database Pd 
--        ON US.Product_ID = Pd.Product_ID
--    GROUP BY 
--        Pd.Product
--),

--Product_Profit AS (
--    SELECT *,
--        ROW_NUMBER() OVER (ORDER BY Total_Profit DESC) AS rn
--    FROM Product_Sales
--)
--SELECT *
--FROM Product_Profit
--WHERE rn <= 10
--ORDER BY Total_Profit DESC

--8--PROFIT GENERATED BY EACH MONTH

--SELECT
--    MONTH(Purchase_Date) AS Purchase_Month,
--    DATENAME(Month, Purchase_Date) AS Month_name,
--    SUM(Profit) AS Total_Profit
--FROM 
--    US_Sales_database_2019_2023 
--GROUP BY 
--    MONTH(Purchase_Date), DATENAME(Month, Purchase_Date)
--ORDER BY 
--   Purchase_Month


--9--STATES WITH THE PROFIT GENERATED

--SELECT
--    Sd.State,            
--    SUM(US.Profit) AS Total_Profit          
--FROM 
--    US_Sales_database_2019_2023 US
--JOIN 
--    States_database Sd
--    ON US.State_ID = Sd.State_ID
--GROUP BY 
--    Sd.State
--ORDER BY 
--    Total_Profit DESC;

--10---PROFIT GENERATED BY BUYERS

--SELECT top 10
--    Bd.Buyer,
--    SUM(US.Profit) AS Total_Profit
--FROM 
--    US_Sales_database_2019_2023 US
--JOIN 
--    Buyers_database Bd
--    ON US.Buyer_ID = Bd.Buyer_ID
--GROUP BY
--    Bd.Buyer
--ORDER BY
--    Total_Profit DESC
    

